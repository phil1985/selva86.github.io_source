colors <- c("yellogreen", "whitesmoke", "steelblue", "firebrick", "springgreen", "violetred", "tomato", "thistle", "skyblue",
"sienna", "slateblue", "seashell", "seagreen", "sandybrown", "salmon", "saddlebrown", "royalblue", "rosybrown",
"powderblue", "plum", "peachpuff", "papayawhip", "palegoldenrod", "orangered", "olivedrab", "navyblue", "mistyrose",
"navajowhite", "mocassin", "midnightblue", "mediumvioletred", "maroon", "linen", "limegreen", "lightgoldenrod",
"lawngreen", "forestgreen", "dodgerblue", "dimgray", "deeppink", "darkred", "darkkhaki", "azure")
length(colors)
df <- data.frame(rep(10, 43), colors)
df
df <- data.frame(num=rep(10, 43), colors)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", aes(fill=colors), width = 0.25)
print(ggbar)
print(gg_bar)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", fill=colors, width = 0.25)
print(gg_bar)
colors <- c("steelblue", "whitesmoke", "steelblue", "firebrick", "springgreen", "violetred", "tomato", "thistle", "skyblue",
"sienna", "slateblue", "seashell", "seagreen", "sandybrown", "salmon", "saddlebrown", "royalblue", "rosybrown",
"powderblue", "plum", "peachpuff", "papayawhip", "palegoldenrod", "orangered", "olivedrab", "navyblue", "mistyrose",
"navajowhite", "mocassin", "midnightblue", "mediumvioletred", "maroon", "linen", "limegreen", "lightgoldenrod",
"lawngreen", "forestgreen", "dodgerblue", "dimgray", "deeppink", "darkred", "darkkhaki", "azure")
df <- data.frame(num=rep(10, 43), colors)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", fill=colors, width = 0.25)
print(gg_bar)
colors <- c("steelblue", "whitesmoke", "steelblue", "firebrick", "springgreen", "violetred", "tomato", "thistle", "skyblue",
"sienna", "slateblue", "seashell", "seagreen", "sandybrown", "salmon", "saddlebrown", "royalblue", "rosybrown",
"powderblue", "plum", "peachpuff", "papayawhip", "palegoldenrod", "orangered", "olivedrab", "navyblue", "mistyrose",
"navajowhite", "steelblue", "midnightblue", "mediumvioletred", "maroon", "linen", "limegreen", "lightgoldenrod",
"lawngreen", "forestgreen", "dodgerblue", "dimgray", "deeppink", "darkred", "darkkhaki", "azure")
df <- data.frame(num=rep(10, 43), colors)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", fill=colors, width = 0.25)
print(gg_bar)
colors <- c("whitesmoke", "steelblue", "firebrick", "springgreen", "violetred", "tomato", "thistle", "skyblue",
"sienna", "slateblue", "seashell", "seagreen", "sandybrown", "salmon", "saddlebrown", "royalblue", "rosybrown",
"powderblue", "plum", "peachpuff", "papayawhip", "palegoldenrod", "orangered", "olivedrab", "navyblue", "mistyrose",
"navajowhite", "midnightblue", "mediumvioletred", "maroon", "linen", "limegreen", "lightgoldenrod",
"lawngreen", "forestgreen", "dodgerblue", "dimgray", "deeppink", "darkred", "darkkhaki", "azure")
df <- data.frame(num=rep(10, 41), colors)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", fill=colors, width = 0.25)
print(gg_bar)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", fill=colors, width = 0.45)
print(gg_bar)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", fill=colors, width = 0.45) + theme(axis.text.x=element_text(angle=75)
print(gg_bar)
plot.new()
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", fill=colors, width = 0.45) + theme(axis.text.x=element_text(angle=75)
print(gg_bar)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", fill=colors, width = 0.45) + theme(axis.text.x=element_text(angle=75))
print(gg_bar)
df <- data.frame(num=rep(10, 41), colors=factor(colors))
df <- data.frame(num=rep(10, 41), colors=factor(colors, ordered=T))
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", fill=colors, width = 0.45) + theme(axis.text.x=element_text(angle=75))
print(gg_bar)
df
gg_bar <- ggplot(df, aes(x=colors, y=num, fill=colors)) + geom_bar(stat = "identity", width = 0.45) + theme(axis.text.x=element_text(angle=75))
print(gg_bar)
gg_bar <- ggplot(df, aes(x=colors, y=num), fill=colors) + geom_bar(stat = "identity", width = 0.45) + theme(axis.text.x=element_text(angle=75))
print(gg_bar)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=colors) + theme(axis.text.x=element_text(angle=75))
print(gg_bar)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=colors) + theme(axis.text.x=element_text(angle=75, size=2))
print(gg_bar)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=colors) + theme(axis.text.x=element_text(angle=75, size=20))
print(gg_bar)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=colors) + theme(axis.text.x=element_text(angle=75, size=10))
print(gg_bar)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=colors) + theme(axis.text.x=element_text(angle=65, size=10))
print(gg_bar)
gg_bar <- ggplot(df[1:10, ], aes(x=colors, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=factor(colors)) + theme(axis.text.x=element_text(angle=65, size=10))
print(gg_bar)
gg_bar <- ggplot(df[1:10, ], aes(x=colors, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=df$colors[1:10]) + theme(axis.text.x=element_text(angle=65, size=10))
print(gg_bar)
df[1:10, ]
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=df$colors) + theme(axis.text.x=element_text(angle=65, size=10))
print(gg_bar)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=-colors) + theme(axis.text.x=element_text(angle=65, size=10))
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=colors) + theme(axis.text.x=element_text(angle=65, size=10))
print(gg_bar)
gg_bar <- ggplot(df, aes(x=colors, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=colors) + theme(axis.text.x=element_text(angle=65, size=10)) + scale_x_discrete(labels=colors)
print(gg_bar)
df1 <- data.frame(num=rep(10, 20), colors=factor(colors[1:20], ordered=T))
df2 <- data.frame(num=rep(10, 20), colors=factor(colors[21:40], ordered=T))
library(gridExtra)
grid.arrange(gg_bar1, gg_bar2, ncol1)
gg_bar1 <- ggplot(df1, aes(x=colors, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=colors) + theme(axis.text.x=element_text(angle=65, size=10)) + scale_x_discrete(labels=colors)
gg_bar2 <- ggplot(df2, aes(x=colors, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=colors) + theme(axis.text.x=element_text(angle=65, size=10)) + scale_x_discrete(labels=colors)
library(gridExtra)
grid.arrange(gg_bar1, gg_bar2, ncol1)
grid.arrange(gg_bar1, gg_bar2, ncol=1)
df2
df <- data.frame(num=rep(10, 40), cols=factor(colors, ordered=T))
df1 <- data.frame(num=rep(10, 20), cols=factor(colors[1:20], ordered=T))
df <- data.frame(num=rep(10, 40), cols=factor(colors, ordered=T))
df1 <- data.frame(num=rep(10, 20), cols=factor(colors[1:20], ordered=T))
df2 <- data.frame(num=rep(10, 20), cols=factor(colors[21:40], ordered=T))
df1 <- data.frame(num=rep(10, 20), cols=factor(colors[1:20], ordered=T))
df2 <- data.frame(num=rep(10, 20), cols=factor(colors[21:40], ordered=T))
gg_bar1 <- ggplot(df1, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=cols) + theme(axis.text.x=element_text(angle=65, size=10)) + scale_x_discrete(labels=cols)
df2
str(df1)
gg_bar1 <- ggplot(df1, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=cols) + theme(axis.text.x=element_text(angle=65, size=10)) + scale_x_discrete(labels=cols)
df1
gg_bar1 <- ggplot(df1, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=cols) + theme(axis.text.x=element_text(angle=65, size=10)) + scale_x_discrete(labels=cols)
gg_bar1 <- ggplot(df1, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=df1$cols) + theme(axis.text.x=element_text(angle=65, size=10)) + scale_x_discrete(labels=cols)
gg_bar1 <- ggplot(df1, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=df1$cols) + theme(axis.text.x=element_text(angle=65, size=10)) + scale_x_discrete(labels=df1$cols)
gg_bar2 <- ggplot(df2, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=df2$cols) + theme(axis.text.x=element_text(angle=65, size=10)) + scale_x_discrete(labels=df2$cols)
grid.arrange(gg_bar1, gg_bar2, ncol=1)
df <- data.frame(num=rep(10, 40), cols=factor(colors, ordered=T))
df <- data.frame(num=rep(10, 40), cols=factor(colors, ordered=T))
df <- data.frame(num=rep(10, 40), cols=factor(colors, ordered=T))
colors <- c("whitesmoke", "steelblue", "firebrick", "springgreen", "violetred", "tomato", "thistle", "skyblue",
"sienna", "slateblue", "seashell", "seagreen", "sandybrown", "salmon", "saddlebrown", "royalblue", "rosybrown",
"powderblue", "plum", "papayawhip", "palegoldenrod", "orangered", "olivedrab", "navyblue", "mistyrose",
"navajowhite", "midnightblue", "mediumvioletred", "maroon", "linen", "limegreen", "lightgoldenrod",
"lawngreen", "forestgreen", "dodgerblue", "dimgray", "deeppink", "darkred", "darkkhaki", "azure")
df <- data.frame(num=rep(10, 40), cols=factor(colors, ordered=T))
gg_bar <- ggplot(df, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.45, fill=df$cols) + theme(axis.text.x=element_text(angle=65, size=10)) + scale_x_discrete(labels=df$cols)
print(gg_bar)
gg_bar <- ggplot(df, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.5, fill=df$cols) + theme(axis.text.x=element_text(angle=65, size=10)) + scale_x_discrete(labels=df$cols)
print(gg_bar)
gg_bar <- ggplot(df, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.5, fill=df$cols) + theme(axis.text.x=element_text(angle=65, size=10)) + scale_x_discrete(labels=df$cols) + labs(title="Special 40 Colors", x="", y="")
print(gg_bar)
gg_bar <- ggplot(df, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.5, fill=df$cols) + theme(axis.text.x=element_text(angle=65, size=15)) + scale_x_discrete(labels=df$cols) + labs(title="Special 40 Colors", x="", y="")
print(gg_bar)
gg_bar <- ggplot(df, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.5, fill=df$cols) + theme(axis.text.x=element_text(angle=65, size=15), plot.title=element_text(size=30)) + scale_x_discrete(labels=df$cols) + labs(title="Special 40 Colors", x="", y="")
print(gg_bar)
colors <- c("whitesmoke", "steelblue", "firebrick", "springgreen", "violetred", "tomato", "thistle", "skyblue",
"sienna", "slateblue", "seashell", "seagreen", "sandybrown", "salmon", "saddlebrown", "royalblue", "rosybrown",
"powderblue", "plum", "palegoldenrod", "orangered", "olivedrab", "navyblue",
"navajowhite", "midnightblue", "mediumvioletred", "maroon", "limegreen", "lightgoldenrod",
"lawngreen", "forestgreen", "dodgerblue", "dimgray", "deeppink", "darkred", "darkkhaki", "azure")
colors
df <- data.frame(num=rep(10, 37), cols=factor(colors, ordered=T))
gg_bar <- ggplot(df, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.5, fill=df$cols) + theme(axis.text.x=element_text(angle=65, size=15), plot.title=element_text(size=30)) + scale_x_discrete(labels=df$cols) + labs(title="Special 37 Colors", x="", y="")
print(gg_bar)
gg_bar <- ggplot(df, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.5, fill=df$cols) + theme(axis.text.x=element_text(angle=65, size=15), plot.title=element_text(size=30)) + scale_x_discrete(labels=df$cols) + labs(title="Special 37 Colors", x="", y="") + theme_bw()
print(gg_bar)
gg_bar <- ggplot(df, aes(x=cols, y=num)) + geom_bar(stat = "identity", width = 0.5, fill=df$cols) + theme_bw() + theme(axis.text.x=element_text(angle=65, size=15), plot.title=element_text(size=30)) + scale_x_discrete(labels=df$cols) + labs(title="Special 37 Colors", x="", y="")
print(gg_bar)
head(economics)
ggplot(economics, aes(x=date, ymin=pce-20, ymax=pce+20)) + geom_area()
ggplot(economics, aes(x=date)) + geom_area(aes(ymin=pce-20, ymax=pce+20))
ggplot(economics, aes(x=date, y=pce)) + geom_area(aes(ymin=pce-20, ymax=pce+20))
ggplot(economics, aes(x=date, y=pce)) + geom_area()
ggplot(economics, aes(x=date, y=pce)) + geom_area(aes(fill="yellowgreen"))
ggplot(economics, aes(x=date, y=pce)) + geom_area(fill="yellowgreen")
ggplot(economics, aes(x=date)) + geom_area(aes(y=pce), fill="yellowgreen")
ggplot(economics, aes(x=date)) + geom_area(aes(y=psavert), fill="yellowgreen") + geom_area(aes(y=uempmed), fill="midnightblue")
ggplot(economics, aes(x=date)) + geom_area(aes(y=psavert), fill="yellowgreen")
ggplot(economics, aes(x=date)) + geom_area(aes(y=psavert), fill="yellowgreen") + geom_area(aes(y=uempmed), fill="midnightblue")
ggplot(economics, aes(x=date)) + geom_area(aes(y=psavert), fill="yellowgreen", color="yellowgreen") + geom_area(aes(y=uempmed), fill="midnightblue")
ggplot(economics, aes(x=date)) + geom_area(aes(y=psavert), fill="yellowgreen", color="yellowgreen") + geom_area(aes(y=uempmed), fill="dodgeblue")
ggplot(economics, aes(x=date)) + geom_area(aes(y=psavert), fill="yellowgreen", color="yellowgreen") + geom_area(aes(y=uempmed), fill="dodgerblue")
ggplot(economics, aes(x=date)) + geom_area(aes(y=psavert), fill="yellowgreen", color="yellowgreen") + geom_area(aes(y=uempmed), fill="dodgerblue", alpha=0.5)
ggplot(economics, aes(x=date)) + geom_area(aes(y=psavert), fill="yellowgreen", color="yellowgreen") + geom_area(aes(y=uempmed), fill="dodgerblue", alpha=0.5, linetype="dotted")
df <- reshape2::melt(economics[, c("date", "psavert", "uempmed")], id=date)
df <- reshape2::melt(data.frame(economics[, c("date", "psavert", "uempmed")]), id=date)
df <- reshape2::melt(economics[, c("date", "psavert", "uempmed")], id="date")
head(Df)
head(df)
ggplot(df, aes(x=date)) + geom_area(aes(y=value, fill=variable), alpha=0.75)
ggplot(df, aes(x=date)) + geom_area(aes(y=value, fill=variable))
p1 <- ggplot(df, aes(x=date)) + geom_area(aes(y=value, fill=variable))
p2 <- ggplot(economics, aes(x=date)) + geom_area(aes(y=psavert), fill="yellowgreen", color="yellowgreen") + geom_area(aes(y=uempmed), fill="dodgerblue", alpha=0.5, linetype="dotted")
gridExtra::grid.arrange(p1, p2, ncol=2)
p2 <- ggplot(economics, aes(x=date)) + geom_area(aes(y=psavert), fill="yellowgreen", color="yellowgreen") + geom_area(aes(y=uempmed), fill="dodgerblue", alpha=0.75, linetype="dotted")
gridExtra::grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(df, aes(x=date)) + geom_area(aes(y=value, fill=variable)) + labs(title="Non-Overlapping - psavert and uempmed")
p2 <- ggplot(economics, aes(x=date)) + geom_area(aes(y=psavert), fill="yellowgreen", color="yellowgreen") + geom_area(aes(y=uempmed), fill="dodgerblue", alpha=0.75, linetype="dotted") + labs(title="Overlapping - psavert and uempmed")
gridExtra::grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(df, aes(x=date)) + geom_area(aes(y=value, fill=variable)) + labs(title="Non-Overlapping - psavert and uempmed")
p2 <- ggplot(economics, aes(x=date)) + geom_area(aes(y=psavert), fill="yellowgreen", color="yellowgreen") + geom_area(aes(y=uempmed), fill="dodgerblue", alpha=0.7, linetype="dotted") + labs(title="Overlapping - psavert and uempmed")
gridExtra::grid.arrange(p1, p2, ncol=2)
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)))  # boxplot
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5)  # boxplot
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "blue")  # boxplot
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "blue", outlier.size = 2)  # boxplot
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "blue", outlier.size = 4)  # boxplot
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "blue", outlier.size = 4, notch=T)  # boxplot
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "blue", outlier.size = 4, outlier.shape = 2, notch=T)  # boxplot
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "blue", outlier.size = 4, outlier.shape = 1, notch=T)  # boxplot
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "blue", outlier.size = 4, outlier.shape = 1, outlier.stroke = 2, notch=T)  # boxplot
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "dodgerblue", outlier.size = 4, outlier.shape = 1, outlier.stroke = 2, notch=T)  # boxplot
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_violin(aes(fill = factor(cyl)), width=0.5, outlier.colour = "dodgerblue", outlier.size = 4, outlier.shape = 1, outlier.stroke = 2, notch=T)  # violin plot
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_violin(aes(fill = factor(cyl)), width=0.5)  # violin plot
ggplot(mtcars, aes(factor(cyl), mpg)) + geom_violin(aes(fill = factor(cyl)), width=0.5, trim=F)  # violin plot
gridExtra::grid.arrange(p1, p2)
p1 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "dodgerblue", outlier.size = 4, outlier.shape = 1, outlier.stroke = 2, notch=T)  # boxplot
p2 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_violin(aes(fill = factor(cyl)), width=0.5, trim=F)  # violin plot
gridExtra::grid.arrange(p1, p2)
gridExtra::grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "dodgerblue", outlier.size = 4, outlier.shape = 21, outlier.stroke = 2, notch=T)  # boxplot
p2 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_violin(aes(fill = factor(cyl)), width=0.5, trim=F)  # violin plot
gridExtra::grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "dodgerblue", outlier.size = 4, outlier.shape = 21, outlier.stroke = 2, notch=T)  # boxplot
p2 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_violin(aes(fill = factor(cyl)), width=0.5, trim=F)  # violin plot
gridExtra::grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "dodgerblue", outlier.size = 4, outlier.shape = 16, outlier.stroke = 2, notch=T)  # boxplot
p2 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_violin(aes(fill = factor(cyl)), width=0.5, trim=F)  # violin plot
gridExtra::grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "dodgerblue", outlier.size = 4, outlier.shape = 16, outlier.stroke = 2, notch=T) + labs(title="Boxplot")  # boxplot
p2 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_violin(aes(fill = factor(cyl)), width=0.5, trim=F) + labs(title="Violin plot (untrimmed)")  # violin plot
gridExtra::grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_boxplot(aes(fill = factor(cyl)), width=0.5, outlier.colour = "dodgerblue", outlier.size = 4, outlier.shape = 16, outlier.stroke = 2, notch=T) + labs(title="Box plot")  # boxplot
p2 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_violin(aes(fill = factor(cyl)), width=0.5, trim=F) + labs(title="Violin plot (untrimmed)")  # violin plot
gridExtra::grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(mtcars, aes(factor(cyl), mpg)) + geom_density(aes(fill = factor(cyl))) + labs(title="Density plot")  # boxplot
p1
ggplot(mtcars, aes(mpg)) + geom_density(aes(fill = factor(cyl))) + labs(title="Density plot")  # boxplot
ggplot(mtcars, aes(mpg)) + geom_density(aes(fill = factor(cyl))) + labs(title="Density plot")+theme(plot.title=element_text(size=30))
ggplot(mtcars, aes(mpg)) + geom_density(aes(fill = factor(cyl)), size=2) + labs(title="Density plot")  # Density plot
ggplot(mtcars, aes(mpg)) + geom_density(aes(fill = factor(cyl)), size=2) + labs(title="Density plot")+theme(plot.title=element_text(size=30))
cor(mtcars)
corr <- cor(mtcars)
melt(corr)
reshape2::melt(corr)
ggplot2(df, aes(x=Var1, y=Var2, fill=value)) + geom_raster()
ggplot(df, aes(x=Var1, y=Var2, fill=value)) + geom_raster()
df <- reshape2::melt(corr)
class(df)
ggplot(df, aes(x=Var1, y=Var2, fill=value)) + geom_raster()
ggplot(df, aes(x=Var1, y=Var2, fill=value)) + geom_tile()
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_raster() + geom_text
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_raster()
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_raster() + geom_text(label=value)
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_raster() + geom_text(aes(label=value))
corr <- round(cor(mtcars))
corr
corr <- round(cor(mtcars), 2)
corr
corr <- round(cor(mtcars), 2)
df <- reshape2::melt(corr)
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_raster() + geom_text(aes(label=value))
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_raster() + geom_text(aes(label=value), color="white")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_raster() + geom_text(aes(label=value), color="white", size=2)
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_raster() + geom_text(aes(label=value, size=value), color="white")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="Correlogram")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(plot.title=element_text(size=30))
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(plot.title=element_text(size=30), legend.position="none")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(plot.title=element_text(size=30), legend.position="none") + scale_fill_brewer(palette="Reds")
library(RColorBrewer)
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(plot.title=element_text(size=30), legend.position="none") + scale_fill_brewer(palette="Reds")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(plot.title=element_text(size=30), legend.position="none")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(plot.title=element_text(size=30), legend.position="none") + scale_fill_gradient()
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(plot.title=element_text(size=30), legend.position="none") + scale_fill_gradient2()
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(plot.title=element_text(size=30), legend.position="none") + scale_fill_gradient3()
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(plot.title=element_text(size=30), legend.position="none") + scale_fill_gradient2()
library(RColorBrewer)
library(help=RColorBrewer)
library(help=RColorBrewer)
?scale_fill_brewer
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(plot.title=element_text(size=30), legend.position="none") + scale_fill_brewer(palette="Reds")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(plot.title=element_text(size=30), legend.position="none") + scale_fill_brewer(palette=1)
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(plot.title=element_text(size=30), legend.position="none") + scale_fill_distiller(palette="Reds")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=30), legend.position="none") + scale_fill_gradient2()
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none") + scale_fill_distiller(palette="Reds")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none") + scale_fill_distiller(palette=2)
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none") + scale_fill_distiller(palette="Reds")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none")
corr
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none") + scale_fill_distiller(palette="Reds")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none") + scale_fill_distiller(palette=2) + facet_wrap(~ cyl)
df
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none") + scale_fill_distiller(palette=2) + facet_wrap( ~ cyl)
corr <- round(cor(mtcars), 2)
corr[upper.tri(corr,diag=F)] <- NA
corr
df <- reshape2::melt(corr)
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20))
corr <- round(cor(mtcars), 2)
corr[lower.tri(corr,diag=F)] <- NA
df <- reshape2::melt(corr)
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none") + scale_fill_distiller(palette="Reds")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=30), legend.position="none") + scale_fill_gradient2()
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + theme_bw() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none")
ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + theme_bw() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none")
gg3 + theme(plot.background=element_rect(fill="slateblue"), plot.margin = unit(c(2, 4, 1, 3), "cm")) # top, right, bottom, left
gg3 + theme(plot.background=element_rect(fill="yellowgreen"), plot.margin = unit(c(2, 4, 1, 3), "cm")) # top, right, bottom, left
gg <- ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + theme_bw() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none")
gridExtra::grid.arrange(gg, p2, p3)
p2 <- gg + scale_fill_distiller(palette="Reds")
p3 <- gg + scale_fill_gradient2()
gridExtra::grid.arrange(gg, p2, p3)
gridExtra::grid.arrange(gg, p2, p3, ncol=3)
corr <- round(cor(mtcars), 2)
df <- reshape2::melt(corr)
gg <- ggplot(df, aes(x=Var1, y=Var2, fill=value, label=value)) + geom_tile() + theme_bw() + geom_text(aes(label=value, size=value), color="white") + labs(title="mtcars - Correlogram") + theme(text=element_text(size=20), legend.position="none")
library(RColorBrewer)
p2 <- gg + scale_fill_distiller(palette="Reds")
p3 <- gg + scale_fill_gradient2()
gridExtra::grid.arrange(gg, p2, p3, ncol=3)
install.packages("robustbase")
library(robustbase)
example("covMcd")
?covMcd
hbk.x <- data.matrix(hbk[, 1:3])
hbk.x
(cH <- covMcd(hbk.x))
ch
cH
predict(cH)
df <- data.frame(id=c(1,1,1,2,2), action=c("c", "v", "d", "c", "c"))
df
library(reshape2)
?dcast
dcast(df, id ~ action, fun.aggregate = length)
df <- data.frame(Id=c(1,1,1,2,2), Action=c("click", "view", "data", "click", "click"))
library(reshape2)
dcast(df, id ~ action, fun.aggregate = length)
dcast(df, Id ~ Action, fun.aggregate = length)
df
set.seed(1234)
x = rnorm(10)
scores(x, type="chisq", prob=0.9)  # beyond 90th %ile based on chi-sq
library(outliers)
set.seed(1234)
x = rnorm(10)
scores(x, type="chisq", prob=0.9)  # beyond 90th %ile based on chi-sq
outs <- scores(x, type="chisq", prob=0.9)  # beyond 90th %ile based on chi-sq
x[outs]
x
log(1)
lm(dist ~ speed, data=cars) -> a
mean(a$residuals)
lm(dist ~ speed + 0, data=cars) -> b
mean(b$residuals)
library(elasticnet)
install.packages("elasticnet")
library(elasticnet)
library(help=elasticnet)
diabetes
data(diabetes)
diabetes
class(diabetes)
head(diabetes)
str(diabetes)
head(diabetes)
example(ener)
example(ene)
example(enet)
?enet
enet
example(enet)
pitprops
data(pitprops)
pitprops
example(cv.enet )
inputData <- Boston  # plug-in your data here
data(Boston, package="MASS")
inputData <- Boston  # plug-in your data here
scaledData <- data.frame (scale (inputData)) # standardise to same scale
scaledData
head(Boston)
pcaDone <- prcomp (scaledData, scale. = T,) # PCA
?prcom[]
?prcomp
?princomp
pcaDone <- prcomp (scaledData, scale. = T) # PCA
pcaDone
pcaDone1 <- prcomp (inputData, scale. = T) # PCA
pcaDone1
pcaDone1 <- prcomp (inputData, scale. = F) # PCA
pcaDone1 <- prcomp (inputData, scale. = F) # PCA
pcaDone1
summary (pcaDone)  # get summary
sum((pcaDone$sdev)^2)
scale(1:10)
((1:10) - mean(1:10))/sd(1:10)
pcaDone <- prcomp (Boston, scale. = T) # PCA
summary (pcaDone)  # get summary
pcaDone1 <- princomp (Boston, scale. = T) # PCA
pcaDone <- prcomp (Boston, scale. = T) # PCA
pcaDone1 <- princomp (Boston, scale. = T) # PCA
pcaDone
pcaDone1
?princomp
pcaDone <- prcomp (Boston, scale. = F) # PCA
pcaDone
b_pca <- prcomp (Boston, scale. = F) # PCA
b_pca <- prcomp (Boston, scale. = T) # PCA
plot(b_pca)
ncol(Boston)
pcaDone1 <- princomp (Boston, cor=T) # PCA
pcaDone1
b_pca
b_pca <- prcomp (Boston, scale. = T) # PCA
plot(b_pca)
summary(b_pca)
b_pca1 <- princomp (Boston, cor=T) # PCA
summary(b_pca1)
plot(b_pca1)
USArrests
b_pca1 <- princomp (USArrests) # PCA
b_pca2 <- princomp (USArrests) # PCA
b_pca2
b_pca1 <- princomp (Boston) #
b_pca1
loadings(b_pca)
loadings(b_pca1)
loadings(b_pca1)
?loadings
b_pca$rotation
loadings(b_pca1)
Boston
b_pca$rotation
b_pca
b_pca$x
b_pca
b_pca$rotation
b_pca$x[1,1]
b_pca$x[,1]
b_pca$rotation
b_pca$rotation[, 1]
b_pca <- prcomp (Boston, scale. = F) # PCA
plot(b_pca)
summary(b_pca)
b_pca$rotation  # pc loadings
b_pca$rotation[, 1] * Boston[1, ]
b_pca$x[1,1]
b_pca <- prcomp (Boston, scale. = F) # PCA
b_pca$rotation  # pc loadings
b_pca$rotation[, 1]
Boston[1, ]
b_pca$rotation[, 1] * Boston[1, ]
b_pca$x[1,1] <- sum(b_pca$rotation[, 1] * Boston[1, ])
b_pca <- prcomp (Boston, scale. = F) # PCA
b_pca$x[1,1] == sum(b_pca$rotation[, 1] * Boston[1, ])
b_pca$x[1,1]
sum(b_pca$rotation[, 1] * Boston[1, ])
b_pca <- prcomp (Boston, scale. = F) # PCA
b_pca <- prcomp (Boston, scale. = F) # PCA
sum(b_pca$rotation[, 1] * Boston[1, ])
b_pca$x[1,1]
b_pca <- prcomp (Boston, scale. = T) # PCA
sum(b_pca$rotation[, 1] * Boston[1, ])
b_pca$x[1,1]
scale(Boston)
sum(b_pca$rotation[, 1] * scale(Boston)[1, ])
b_pca$x[1,1]
b_pca <- prcomp (mtcars, scale. = T) # PCA
m_pca <- prcomp (mtcars, scale. = T) # PCA
m_pca <- prcomp (mtcars, scale. = T) # PCA
m_pca$x[1,1]
sum(m_pca$rotation[, 1] * scale(mtcars)[1, ])
u_pca$x[1,1] == sum(u_pca$rotation[, 1] * scale(USArrests)[1, ])
u_pca <- prcomp(USArrests) # PCA
u_pca$x[1,1] == sum(u_pca$rotation[, 1] * scale(USArrests)[1, ])
u_pca$x[1,1]
sum(u_pca$rotation[, 1] * scale(USArrests)[1, ])
u_pca <- prcomp(USArrests, scale. = T) # PCA
u_pca$x[1,1] == sum(u_pca$rotation[, 1] * scale(USArrests)[1, ])
u_pca$x[1,1]
sum(u_pca$rotation[, 1] * scale(USArrests)[1, ])
u_pca$x[1,1] == sum(u_pca$rotation[, 1] * scale(USArrests)[1, ])
is.equal(u_pca$x[1,1] sum(u_pca$rotation[, 1] * scale(USArrests)[1, ]))
is.equal(u_pca$x[1,1], sum(u_pca$rotation[, 1] * scale(USArrests)[1, ]))
all.equal(u_pca$x[1,1], sum(u_pca$rotation[, 1] * scale(USArrests)[1, ]))
all.equal(b_pca$x[1,1], sum(b_pca$rotation[, 1] * scale(Boston)[1, ]))
b_pca <- prcomp (Boston, scale. = T) # PCA
all.equal(b_pca$x[1,1], sum(b_pca$rotation[, 1] * scale(Boston)[1, ]))
plot(b_pca)
summary(b_pca)
screeplot(b_pca, type="lines") # screeplot
b_pca$sdev^2
res.pca <- PCA(Boston, graph = FALSE)
library("FactoMineR")
res.pca <- PCA(Boston, graph = FALSE)
print (res.pca)
biplot(b_pca)
devtools::install_github("kassambara/factoextra")
fviz_pca_var(res.pca) # Variables factor map
library("factoextra")
fviz_pca_var(res.pca) # Variables factor map
fviz_pca_contrib(res.pca, choice = "var", axes = 1:2)  # set axes=1 to consider only PC1
?knn
library(MASS)
?lda
Iris <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]),
Sp = rep(c("s","c","v"), rep(50,3)))
train <- sample(1:150, 75)
table(Iris$Sp[train])
Iris
?cov
swiss
abbreviate(colnames(swiss), min=6)
swM <- swiss
colnames(swM) <- abbreviate(colnames(swiss), min=6)
swM
cov
cov(mtcars)
cov(mtcars)
mtcars %*% mtcars
matrix(mtcars) -> m
m %*% m
m
as.matrix(mtcars) -> m
m
m %*% m
str(m)
as.numeric(mtcars)
as.numeric(mtcarsm)
m
class(m)
str(m)
t(m) * m
t(m)
cov(mtcars)
(.060^2) + (.357^2) + (.679^2) + (.269^2)
((.060^2) + (.357^2) + (.679^2) + (.269^2))/4
