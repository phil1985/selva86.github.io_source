g + facet_grid(trans ~ class)
g + facet_grid(fl ~ class)
?mpg
gg + theme(plot.title=element_text(size=35,
face="bold",
family="American Typewriter",
color="chocolate",
hjust=0.5,
lineheight=1.2),  # title
plot.subtitle=element_text(size=25,
family="American Typewriter",
face="bold",
hjust=0.5),  # subtitle
plot.caption=element_text(size=20),  # caption
axis.title.x=element_text(vjust=10,
size=30),  # X axis title
axis.title.y=element_text(size=30),  # Y axis title
axis.text.x=element_text(size=20,
angle = 30,
vjust=.5),  # X axis text
axis.text.y=element_text(size=20))  # Y axis text
knitr::opts_chunk$set(echo = TRUE, eval = FALSE, fig.asp = 0.618, fig.width = 6, fig.align = 'center')
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state), size=3) +
geom_smooth(method="lm", col="firebrick", size=2) +
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics") + scale_x_continuous(breaks=seq(0, 0.1, 0.01)) + theme(plot.title=element_text(size=30, face="bold"), plot.subtitle=element_text(size=20, face="bold"),  axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.x=element_text(size=25),
axis.title.y=element_text(size=25), plot.caption=element_text(size=15))
g <- ggplot(mpg, aes(x=displ, y=hwy)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
theme_bw()
plot(g)
g + facet_wrap( ~ class, nrow=3)
g + facet_wrap( ~ class, scales = "free")
g + theme(panel.background = element_rect(fill = 'springgreen'),
panel.grid.major = element_line(colour = "firebrick", size=3),
panel.grid.minor = element_line(colour = "blue", size=1))
g + theme(plot.background=element_rect(fill="yellowgreen"), plot.margin = unit(c(2, 4, 1, 3), "cm")) # top, right, bottom, left
gg + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
g + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
getwd()
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
library(png)
library(grid)
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
img
g <- rasterGrob(img, interpolate=TRUE)
qplot(1:10, 1:10, geom="blank") +
annotation_custom(g, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
geom_point()
img <- readPNG("screenshot/Rlogo.png")
img <- readPNG("screenshots/Rlogo.png")
img
g <- rasterGrob(img, interpolate=TRUE)
qplot(1:10, 1:10, geom="blank") +
annotation_custom(g, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
geom_point()
g + annotation_custom(g, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
geom_point()
g + annotation_custom(g, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)
g
g_pic <- rasterGrob(img, interpolate=TRUE)
g <- ggplot(mpg, aes(x=displ, y=hwy)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
theme_bw()
g + annotation_custom(g, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)
g + annotation_custom(g_pic, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)
g + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) + annotation_custom(g_pic, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)
g
library(png)
library(grid)
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
img <- readPNG("screenshots/Rlogo.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
g
g + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) + annotation_custom(g_pic, xmin=2, xmax=7, ymin=15, ymax=40)
library(png)
library(grid)
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
img <- readPNG("screenshots/Rlogo.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
g
g + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) + annotation_custom(g_pic, xmin=5, xmax=7, ymin=35, ymax=45)
g + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) + annotation_custom(g_pic, xmin=4, xmax=7, ymin=35, ymax=45)
g + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) + annotation_custom(g_pic, xmin=4, xmax=7, ymin=30, ymax=45)
g + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) + annotation_custom(g_pic, xmin=5, xmax=7, ymin=30, ymax=45)
library(png)
library(grid)
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
img <- readPNG("screenshots/Rlogo.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
g
g + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) + annotation_custom(g_pic, xmin=5, xmax=7, ymin=30, ymax=45)
library(grid)
img <- readPNG("screenshots/Rlogo.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
g
g + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) + annotation_custom(g_pic, xmin=5, xmax=7, ymin=30, ymax=45)
library(grid)
img <- readPNG("screenshots/Rlogo.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
g + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) + annotation_custom(g_pic, xmin=5, xmax=7, ymin=30, ymax=45)
g + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
library(grid)
img <- readPNG("screenshots/Rlogo.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
g + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) + annotation_custom(g_pic, xmin=5, xmax=7, ymin=30, ymax=45)
library(grid)
img <- readPNG("screenshots/Rlogo.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
g + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) + annotation_custom(g_pic, xmin=5, xmax=7, ymin=30, ymax=45)
library(grid)
img <- readPNG("screenshots/Rlogo.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
g + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.ticks = element_blank()) + annotation_custom(g_pic, xmin=5, xmax=7, ymin=30, ymax=45)
?theme
g + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
library(grid)
img <- readPNG("screenshots/Rlogo.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
g + theme(panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.ticks = element_blank()) +
annotation_custom(g_pic, xmin=5, xmax=7, ymin=30, ymax=45)
library(grid)
img <- readPNG("screenshots/Rlogo.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
g + theme(panel.grid.major = element_blank(),
#    panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.ticks = element_blank()) +
annotation_custom(g_pic, xmin=5, xmax=7, ymin=30, ymax=45)
library(grid)
img <- readPNG("screenshots/Rlogo.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
g + theme(panel.grid.major = element_blank(),
panel.grid.major = element_blank(),
#    panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.ticks = element_blank()) +
annotation_custom(g_pic, xmin=5, xmax=7, ymin=30, ymax=45)
library(grid)
img <- readPNG("screenshots/Rlogo.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
g + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#    panel.border = element_blank(),
plot.title = element_text(size = rel(1.5), face = "bold"),
axis.ticks = element_blank()) +
annotation_custom(g_pic, xmin=5, xmax=7, ymin=30, ymax=45)
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state), size=3) +
geom_smooth(method="lm", col="firebrick", size=2) +
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics") + scale_x_continuous(breaks=seq(0, 0.1, 0.01), labels = sprintf("%1.2f%%", seq(0, 0.1, 0.01))) + scale_y_continuous(breaks=seq(0, 1000000, 200000), labels = function(x){paste0(x/1000, 'K')}) + theme(plot.title=element_text(size=30, face="bold"), plot.subtitle=element_text(size=20, face="bold"),  axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.x=element_text(size=25),
axis.title.y=element_text(size=25), plot.caption=element_text(size=15))
embed_png("screenshots/ggplot_tut_12.png", dpi = 220)
g + theme(panel.background = element_rect(fill = 'yellow'),
panel.grid.major = element_line(colour = "firebrick", size=3),
panel.grid.minor = element_line(colour = "blue", size=1))
g + theme(plot.background=element_rect(fill="yellowgreen"),
plot.margin = unit(c(2, 4, 1, 3), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'yellow'),
panel.grid.major = element_line(colour = "firebrick", size=3),
panel.grid.minor = element_line(colour = "springgreen", size=1))
g + theme(plot.background=element_rect(fill="yellowgreen"),
plot.margin = unit(c(2, 4, 1, 3), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'yellow'),
panel.grid.major = element_line(colour = "firebrick", size=3),
panel.grid.minor = element_line(colour = "green", size=1))
g + theme(plot.background=element_rect(fill="yellowgreen"),
plot.margin = unit(c(2, 4, 1, 3), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'yellow'),
panel.grid.major = element_line(colour = "steelblue", size=3),
panel.grid.minor = element_line(colour = "green", size=1))
g + theme(plot.background=element_rect(fill="yellowgreen"),
plot.margin = unit(c(2, 4, 1, 3), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'yellow'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "green", size=1))
g + theme(plot.background=element_rect(fill="yellowgreen"),
plot.margin = unit(c(2, 4, 1, 3), "cm")) # top, right, bottom, left
## Setup
options(scipen=999)
library(ggplot2)
data("midwest", package = "ggplot2")
# midwest <- read.csv("http://goo.gl/G1K41K")
# Add plot components
gg <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
geom_smooth(method="lm", col="firebrick") +
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", y="Population", x="Area")
plot(gg)
gg + theme(plot.title=element_text(size=35,
face="bold",
family="American Typewriter",
color="chocolate",
hjust=0.5,
lineheight=1.2),  # title
plot.subtitle=element_text(size=25,
family="American Typewriter",
face="bold",
hjust=0.5),  # subtitle
plot.caption=element_text(size=20),  # caption
axis.title.x=element_text(vjust=10,
size=30),  # X axis title
axis.title.y=element_text(size=30),  # Y axis title
axis.text.x=element_text(size=20,
angle = 30,
vjust=.5),  # X axis text
axis.text.y=element_text(size=20))  # Y axis text
gg + labs(color="State", size="Density")
gg + scale_color_discrete(name="State") + scale_size_continuous(name = "Density", guide = FALSE)
gg <- gg + guides(color=guide_legend("State"), size=guide_legend("Density"))
plot(gg)
gg + scale_color_manual(name="State",
labels = c("Illinois", "Indiana", "Michigan", "Ohio", "Wisconsin"),
values = c("IL"="blue", "IN"="red", "MI"="green", "OH"="brown", "WI"="orange"))
gg + scale_color_manual(name="State",
labels = c("Illinois", "Indiana", "Michigan", "Ohio", "Wisconsin"))
gg + scale_color_manual(name="State",
labels = c("Illinois", "Indiana", "Michigan", "Ohio", "Wisconsin"),
values = c("IL"="blue", "IN"="red", "MI"="green", "OH"="brown", "WI"="orange"))
gg + guides(colour = guide_legend(order = 1),
size = guide_legend(order = 2))
theme_set(theme_dark())
gg1
gg + theme(legend.position="None")  # No legend
gg + theme(legend.position="left")  # Legend to the left
gg + theme(legend.position="bottom", legend.box = "horizontal")  # legend to the bottom and horizontal.
gg + theme(legend.justification=c(1,0), legend.position=c(0.95, 0.05))  # bottom-right inside the plot
gg + theme(legend.justification=c(1,1), legend.position=c(0.95, 0.95))  # top-right inside the plot
theme_set(theme_void())
gg1
theme_set(theme_void())
gg1
theme_set(theme_classic())  # not run
gg1
gg + theme(legend.position="None")  # No legend
gg + theme(legend.position="left")  # Legend to the left
gg + theme(legend.position="bottom", legend.box = "horizontal")  # legend to the bottom and horizontal.
gg + theme(legend.justification=c(1,0), legend.position=c(0.95, 0.05))  # bottom-right inside the plot
gg + theme(legend.justification=c(1,1), legend.position=c(0.95, 0.95))  # top-right inside the plot
# make dataset with filtered rows.
midwest_sub <- midwest[midwest$poptotal > 400000, ]
midwest_sub$large_county <- ifelse(midwest_sub$poptotal > 400000, midwest_sub$county, "")
# plot
gg + geom_text(aes(label=large_county), size=2, data=midwest_sub)   # text
gg + geom_label(aes(label=large_county), size=2, data=midwest_sub, alpha=0.25)   # label
library(ggrepel)
gg + geom_text_repel(aes(label=large_county), size=2, data=midwest_sub)   # text
gg + geom_label_repel(aes(label=large_county), size=2, data=midwest_sub)   # label
library(grid)
my_text <- "This text is at x=0.7 and y=0.9!"
my_grob = grid.text(my_text, x=0.7,  y=0.9, gp=gpar(col="firebrick", fontsize=10, fontface="bold"))
gg + annotation_custom(my_grob)
gg + coord_flip()
gg + scale_x_reverse() + scale_y_reverse()
library(ggplot2)
data(mpg, package="ggplot2")  # load data
# mpg <- read.csv("http://goo.gl/uEeRGu")  # alt data source
g <- ggplot(mpg, aes(x=displ, y=hwy)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
theme_bw()
plot(g)
g + facet_wrap( ~ class, nrow=3)  # Shared scales
g + facet_wrap( ~ class, scales = "free")  # Scales free
g + theme(panel.background = element_rect(fill = 'yellow'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=1))
g + theme(plot.background=element_rect(fill="yellowgreen"),
plot.margin = unit(c(2, 4, 1, 3), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'yellow'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="yellowgreen"),
plot.margin = unit(c(2, 4, 1, 3), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'yellow'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="steelblue"),
plot.margin = unit(c(2, 3, 1, 2), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'yellow'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="blue"),
plot.margin = unit(c(2, 3, 1, 2), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'yellow'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="yellow"),
plot.margin = unit(c(2, 3, 1, 2), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'yellow'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="yellow"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'yellow'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="gray"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'gray'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="gray"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'gray2'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="gray"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'gray3'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="gray"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'grey3'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="gray"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
colors()
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="gray"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="snow"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="tomato"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="seashell"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="siena"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
colors
colors()
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="sienna"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="tan"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="slateblue"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "firebrick", size=.5))
g + theme(plot.background=element_rect(fill="salmon"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "steelblue", size=2),
panel.grid.minor = element_line(colour = "tomato", size=.5))
g + theme(plot.background=element_rect(fill="salmon"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "seagreen", size=2),
panel.grid.minor = element_line(colour = "tomato", size=.5))
g + theme(plot.background=element_rect(fill="salmon"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
colors()
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "papayawhip", size=2),
panel.grid.minor = element_line(colour = "tomato", size=.5))
g + theme(plot.background=element_rect(fill="salmon"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "oldlace", size=2),
panel.grid.minor = element_line(colour = "tomato", size=.5))
g + theme(plot.background=element_rect(fill="salmon"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "forestgreen", size=2),
panel.grid.minor = element_line(colour = "tomato", size=.5))
g + theme(plot.background=element_rect(fill="salmon"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "burlywood", size=2),
panel.grid.minor = element_line(colour = "tomato", size=.5))
g + theme(plot.background=element_rect(fill="salmon"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "burlywood", size=1),
panel.grid.minor = element_line(colour = "tomato", size=.5))
g + theme(plot.background=element_rect(fill="salmon"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'whitesmoke'),
panel.grid.major = element_line(colour = "burlywood", size=1.5),
panel.grid.minor = element_line(colour = "tomato", size=.5))
g + theme(plot.background=element_rect(fill="salmon"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'royalblue'),
panel.grid.major = element_line(colour = "burlywood", size=1.5),
panel.grid.minor = element_line(colour = "tomato", size=.5))
g + theme(plot.background=element_rect(fill="salmon"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'wheat'),
panel.grid.major = element_line(colour = "burlywood", size=1.5),
panel.grid.minor = element_line(colour = "tomato", size=.5))
g + theme(plot.background=element_rect(fill="salmon"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
g + theme(panel.background = element_rect(fill = 'seashell'),
panel.grid.major = element_line(colour = "burlywood", size=1.5),
panel.grid.minor = element_line(colour = "tomato", size=.5))
g + theme(plot.background=element_rect(fill="salmon"),
plot.margin = unit(c(2, 2, 1, 1), "cm")) # top, right, bottom, left
